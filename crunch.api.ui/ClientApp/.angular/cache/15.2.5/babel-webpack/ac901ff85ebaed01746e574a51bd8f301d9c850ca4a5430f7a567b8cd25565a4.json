{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/services/crunch/crunch.service\";\nimport * as i2 from \"@angular/forms\";\nexport class HomeComponent {\n  constructor(crunchService) {\n    this.crunchService = crunchService;\n  }\n  ngOnInit() {}\n  onFileChange($event) {\n    var fileList = $event?.target.files;\n    if (fileList.length > 0) {\n      this.crunchFile = fileList[0];\n    }\n  }\n  appendFileContent(file) {\n    const uploadFormData = new FormData();\n    var ext = /^.+\\.([^.]+)$/.exec(file.name);\n    var fileExtension = null ? \"\" : ext[1];\n    if (fileExtension.toLowerCase() === 'txt') {\n      uploadFormData.append('documentFileName', file.name);\n      uploadFormData.append('documentFile', file);\n      uploadFormData.append('documentDescription', 'Pre-Cruch File');\n    }\n    return uploadFormData;\n  }\n  sendToCruncher(crunchService) {\n    var crunchFileAndContents = this.appendFileContent(this.crunchFile);\n    var crunchSubscription = crunchService.CrunchWord(crunchFileAndContents).subscribe({\n      next: response => {\n        debugger;\n        console.log(response.data);\n      },\n      error: error => {\n        debugger;\n      }\n    });\n    return crunchSubscription;\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.CrunchService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[\"type\", \"file\", \"accept\", \"\", 3, \"change\"], [3, \"disabled\", \"click\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"form\")(2, \"input\", 0);\n      i0.ɵɵlistener(\"change\", function HomeComponent_Template_input_change_2_listener($event) {\n        return ctx.onFileChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_3_listener() {\n        return ctx.sendToCruncher(ctx.crunchService);\n      });\n      i0.ɵɵtext(4, \"Crunch\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.crunchFile);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,aAAa;EAIxBC,YAA0BC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;EAAiB;EAExDC,QAAQ,IAGR;EAEAC,YAAY,CAACC,MAAW;IAEtB,IAAIC,QAAQ,GAAGD,MAAM,EAAEE,MAAM,CAACC,KAAK;IAEnC,IAAGF,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAC;MAErB,IAAI,CAACC,UAAU,GAAGJ,QAAQ,CAAC,CAAC,CAAC;;EAIjC;EAEQK,iBAAiB,CAACC,IAAU;IAElC,MAAMC,cAAc,GAAG,IAAIC,QAAQ,EAAE;IAErC,IAAIC,GAAG,GAAQ,eAAe,CAACC,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC;IAC9C,IAAIC,aAAa,GAAW,IAAI,GAAG,EAAE,GAAGH,GAAG,CAAC,CAAC,CAAC;IAE9C,IAAGG,aAAa,CAACC,WAAW,EAAE,KAAK,KAAK,EAAC;MAEvCN,cAAc,CAACO,MAAM,CAAC,kBAAkB,EAAER,IAAI,CAACK,IAAI,CAAC;MACpDJ,cAAc,CAACO,MAAM,CAAC,cAAc,EAAER,IAAI,CAAC;MAC3CC,cAAc,CAACO,MAAM,CAAC,qBAAqB,EAAE,gBAAgB,CAAC;;IAIhE,OAAOP,cAAc;EAEvB;EAEOQ,cAAc,CAACnB,aAA4B;IAEhD,IAAIoB,qBAAqB,GAAG,IAAI,CAACX,iBAAiB,CAAC,IAAI,CAACD,UAAU,CAAC;IAEnE,IAAIa,kBAAkB,GAAGrB,aAAa,CAACsB,UAAU,CAACF,qBAAqB,CAAC,CAACG,SAAS,CAAC;MAEjFC,IAAI,EAAGC,QAAqB,IAAI;QAE9B;QAEAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAE5B,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QAEf;MAEF;KAED,CAAC;IAEF,OAAOR,kBAAkB;EAE3B;;AAjEWvB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAgC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV1BC,2BAAK;MAI4BA;QAAA,OAAUC,wBAAoB;MAAA,EAAC;MAA5DD,iBAA6D;MAE7DA,iCAA0E;MAAlEA;QAAA,OAASC,qCAA6B;MAAA,EAAC;MAA2BD,sBAAM;MAAAA,iBAAS;;;MAAzCA,eAAwB;MAAxBA,0CAAwB","names":["HomeComponent","constructor","crunchService","ngOnInit","onFileChange","$event","fileList","target","files","length","crunchFile","appendFileContent","file","uploadFormData","FormData","ext","exec","name","fileExtension","toLowerCase","append","sendToCruncher","crunchFileAndContents","crunchSubscription","CrunchWord","subscribe","next","response","console","log","data","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\bongi\\source\\repos\\Angular-Projects\\alexforbes.crunch.assess\\crunch.api.ui\\ClientApp\\src\\app\\home\\home.component.ts","C:\\Users\\bongi\\source\\repos\\Angular-Projects\\alexforbes.crunch.assess\\crunch.api.ui\\ClientApp\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { CrunchService } from '../shared/services/crunch/crunch.service';\r\nimport { ApiResponse } from '../shared/models/http-response.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  public crunchFile: File;\r\n\r\n  public constructor(public crunchService: CrunchService){}\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n\r\n  onFileChange($event: any){\r\n\r\n    var fileList = $event?.target.files;\r\n\r\n    if(fileList.length > 0){\r\n\r\n      this.crunchFile = fileList[0];\r\n\r\n    }\r\n\r\n  }\r\n\r\n  private appendFileContent(file: File): FormData{\r\n    \r\n    const uploadFormData = new FormData();\r\n\r\n    var ext: any = /^.+\\.([^.]+)$/.exec(file.name);\r\n    var fileExtension: string = null ? \"\" : ext[1];\r\n\r\n    if(fileExtension.toLowerCase() === 'txt'){\r\n\r\n      uploadFormData.append('documentFileName', file.name);\r\n      uploadFormData.append('documentFile', file);\r\n      uploadFormData.append('documentDescription', 'Pre-Cruch File');\r\n\r\n    }\r\n\r\n    return uploadFormData;\r\n\r\n  }\r\n\r\n  public sendToCruncher(crunchService: CrunchService): Subscription{\r\n\r\n    var crunchFileAndContents = this.appendFileContent(this.crunchFile);\r\n\r\n    var crunchSubscription = crunchService.CrunchWord(crunchFileAndContents).subscribe({\r\n\r\n      next: (response: ApiResponse) => {\r\n\r\n        debugger\r\n\r\n        console.log(response.data);\r\n\r\n      },\r\n      error: (error) => {\r\n\r\n        debugger\r\n\r\n      }\r\n\r\n    });\r\n\r\n    return crunchSubscription;\r\n\r\n  }\r\n\r\n\r\n}\r\n","<div>\r\n\r\n  <form>\r\n\r\n    <input type=\"file\" accept=\"\" (change)=\"onFileChange($event)\">\r\n\r\n    <button (click)=\"sendToCruncher(crunchService)\" [disabled]=\"!crunchFile\" >Crunch</button>\r\n\r\n  </form>\r\n\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}